[{"/Users/sarahbawabe/Documents/verb-website/verb-app/src/index.js":"1","/Users/sarahbawabe/Documents/verb-website/verb-app/src/App.js":"2","/Users/sarahbawabe/Documents/verb-website/verb-app/src/reportWebVitals.js":"3","/Users/sarahbawabe/Documents/verb-website/verb-app/src/Product.js":"4","/Users/sarahbawabe/Documents/verb-website/verb-app/src/ShoppingCart.js":"5","/Users/sarahbawabe/Documents/verb-website/verb-app/src/CartItem.js":"6","/Users/sarahbawabe/Documents/verb-website/verb-app/src/App.test.js":"7","/Users/sarahbawabe/Documents/verb-website/verb-app/src/setupTests.js":"8","/Users/sarahbawabe/Documents/verb-website/verb-app/src/ProductPage.js":"9","/Users/sarahbawabe/Documents/verb-website/verb-app/src/Main.js":"10","/Users/sarahbawabe/Documents/verb-website/verb-app/src/CheckoutPage.js":"11","/Users/sarahbawabe/Documents/verb-website/verb-app/src/HomePage.js":"12"},{"size":502,"mtime":1612795353683,"results":"13","hashOfConfig":"14"},{"size":2794,"mtime":1613016891934,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612553000643,"results":"16","hashOfConfig":"14"},{"size":4898,"mtime":1613017129228,"results":"17","hashOfConfig":"14"},{"size":4824,"mtime":1613017171474,"results":"18","hashOfConfig":"14"},{"size":3542,"mtime":1613017148011,"results":"19","hashOfConfig":"14"},{"size":246,"mtime":1612553000640,"results":"20","hashOfConfig":"14"},{"size":241,"mtime":1612553000644,"results":"21","hashOfConfig":"14"},{"size":2025,"mtime":1613015719831,"results":"22","hashOfConfig":"14"},{"size":3264,"mtime":1613016991866,"results":"23","hashOfConfig":"14"},{"size":720,"mtime":1613017029168,"results":"24","hashOfConfig":"14"},{"size":1600,"mtime":1613015606593,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"18sfkon",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"/Users/sarahbawabe/Documents/verb-website/verb-app/src/index.js",[],["59","60"],"/Users/sarahbawabe/Documents/verb-website/verb-app/src/App.js",[],"/Users/sarahbawabe/Documents/verb-website/verb-app/src/reportWebVitals.js",[],"/Users/sarahbawabe/Documents/verb-website/verb-app/src/Product.js",["61","62","63","64","65"],"import React, {Component} from 'react';\nimport './style.css';\nimport { Link } from \"react-router-dom\";\n\n/** Models a Product tile, used in the HomePage and on the ProductPage.\n * Knowledgable of necessary callback functions so that it can handle\n * addToCart functionality.\n *\n * SVGs from https://systemuicons.com/\n */\nclass Product extends Component {\n    constructor(props) {\n      super(props);\n    }\n\n    /** Trigger callback function for addToCart. */\n    addToCart = (event) => {\n      this.props.addToCartCB(this.props.item);\n    }\n\n    /** Renders the price of the item based on whether or not it's on sale.\n     * @param item : item whose price is to be rendered\n     * @return price of item\n     */\n    handleSale(onSale) {\n      if (onSale == \"True\") { // if on sale, calculate new price and mark as \"ON SALE!\"\n        var salePrice = (this.props.item.price * (1 - this.props.sale/100)).toFixed(2)\n        return (\n          <span>\n            <span className=\"sale-item\">\n              <h3>on sale!\n              <svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\" stroke=\"#2a2e3b\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"matrix(-1 0 0 1 20 2)\"><path d=\"m8.5 2.56534572h2c3.3137085 0 6 2.6862915 6 6v1.93465428c0 3.3137085-2.6862915 6-6 6h-2c-3.3137085 0-6-2.6862915-6-6v-1.93465428c0-3.3137085 2.6862915-6 6-6z\"/><path d=\"m3.94265851-.12029102c-1.05323083.28505997-1.86575682 1.17688618-1.86575682 2.30840383 0 1.16606183.73081563 2.21070886 1.78973019 2.50733508\" transform=\"matrix(.62932039 .77714596 -.77714596 .62932039 2.893856 -1.491094)\"/><path d=\"m16.9295345-.10708618c-1.0898445.26224883-1.9419712 1.17003523-1.9419712 2.3284815 0 1.16644061.7312905 2.21138754 1.7907622 2.50762392\" transform=\"matrix(-.62932039 .77714596 .77714596 .62932039 24.205765 -11.545558)\"/><path d=\"m9.5 5.5v4h-3.5\"/><path d=\"m15 15 2 2\"/><path d=\"m2 15 2 2\" transform=\"matrix(-1 0 0 1 6 0)\"/></g></svg>\n              </h3></span>\n            <h4>({this.props.sale}% off)</h4>\n            <h3>\n              <span className=\"cross-out\">\n                ${this.props.item.price}\n              </span>\n              <strong> ${salePrice}</strong>\n            </h3>\n          </span>\n        );\n      } else {\n        return (\n          <h3>${this.props.item.price}</h3>)\n      }\n    }\n\n    render() {\n      let item = this.props.item\n\n      if (this.props.showFull == \"True\") { // if on product page, show full item details\n        return (\n           <div className=\"product\">\n              <img src={item.image} className=\"product-img\"></img>\n              <h2>{item.name}</h2>\n              {this.handleSale(item.onSale)}\n              <p>{item.description}</p>\n              <h4>SKU: #{item.sku}</h4>\n              <button onClick={this.addToCart}>\n                <span className=\"button-content\">add to bag <svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2.42575356.50254623 8.09559774-.00228582c.5209891-.0001471.9548019.39973171.9969972.91900928l.8938128 10.99973961c.0447299.5504704-.3652538 1.0329756-.9157242 1.0777056-.0269414.0021892-.0539605.0032851-.0809907.0032851h-9.83555122c-.55228475 0-1-.4477152-1-1 0-.0255993.00098299-.0511891.00294679-.076713l.84614072-10.99745378c.0400765-.52088193.4743495-.92313949.99677087-.92328699zm7.07424644 3.64272599v1c0 1.10456949-1.8954305 1.35472778-3 1.35472778s-3-.3954305-3-1.5v-1\" fill=\"none\" stroke=\"#2a2e3b\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(4 4)\"/></svg></span>\n              </button>\n          </div>\n        );\n      } else { // if not on product page, render only image, name, and price\n        return (\n           <div className=\"product\">\n              <Link to={\"/product/\" + item.sku} className=\"unstyled-link\">\n                <img src={item.image} className=\"product-img\"></img>\n                <h2>{item.name}</h2>\n              </Link>\n              {this.handleSale(item.onSale)}\n              <button onClick={this.addToCart}>\n                <span className=\"button-content\">add to bag <svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2.42575356.50254623 8.09559774-.00228582c.5209891-.0001471.9548019.39973171.9969972.91900928l.8938128 10.99973961c.0447299.5504704-.3652538 1.0329756-.9157242 1.0777056-.0269414.0021892-.0539605.0032851-.0809907.0032851h-9.83555122c-.55228475 0-1-.4477152-1-1 0-.0255993.00098299-.0511891.00294679-.076713l.84614072-10.99745378c.0400765-.52088193.4743495-.92313949.99677087-.92328699zm7.07424644 3.64272599v1c0 1.10456949-1.8954305 1.35472778-3 1.35472778s-3-.3954305-3-1.5v-1\" fill=\"none\" stroke=\"#2a2e3b\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(4 4)\"/></svg></span>\n              </button>\n          </div>\n        );\n      }\n    }\n\n}\n\nexport default Product;\n","/Users/sarahbawabe/Documents/verb-website/verb-app/src/ShoppingCart.js",["66","67","68","69","70"],"/Users/sarahbawabe/Documents/verb-website/verb-app/src/CartItem.js",["71","72","73"],"import React, {Component} from 'react';\nimport './style.css';\n\n\n/** Models an item in the ShoppingCart. Stores its quantity in state so\n * that it can re-render on quantity updates.\n *\n * SVGs from https://systemuicons.com/\n */\nclass CartItem extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          quantity: 1\n      };\n    }\n\n    /** Handles the (-) button functionality, and determines if an item should\n     * be removed completely from cart based on its current quantity. */\n    removeOne = (event) => {\n      if (this.props.quantity == 1) { // if only one left, remove from cart instead\n        this.removeFromCart()\n      } else {\n        this.props.removeOneCB(this.props.item)\n      }\n    }\n\n    /** Handles the (X) button functionality by calling the removeAll\n     * callback function. */\n    removeFromCart = (event) => {\n      this.props.removeAllCB(this.props.item)\n    }\n\n    /** Handles the add to cart functionality by calling the addToCart\n     * callback function and updating the CartItem's state accordingly. */\n    addToCart = (event) => {\n      this.setState({ quantity: this.state.quantity + 1})\n      this.props.addToCartCB(this.props.item)\n    }\n\n    /**\n     * Calculates the cost of an item based on its price and quantity.\n     * @param quantity : quantity of given item currently in cart\n     * @param price : price of purchasing one item\n     * @return total cost of CartItem\n     */\n    getCost(quantity, price) {\n      var cost = quantity * price\n      return cost.toFixed(2)\n    }\n\n    /**\n     * Renders the price of the item based on whether or not it's on sale.\n     * @param item : item whose price is to be rendered\n     * @return price of item\n     */\n    renderPrice(item) {\n      if (item.onSale == \"True\") { // if on sale, render (% off) and calculate new price\n        var salePrice = (this.props.item.price * (1 - this.props.sale/100)).toFixed(2)\n        return (\n          <span>\n            <h3>{this.props.quantity} x ${salePrice}</h3>\n            <span className=\"sale-item\"><h4>({this.props.sale}% off!)</h4></span>\n          </span>\n        )\n      } else { // if not on sale, render full price\n        return (\n          <h3>{this.props.quantity} x ${this.props.item.price}</h3>\n        )\n      }\n    }\n\n    render() {\n      if (this.props.onCheckout == \"True\") { // if on checkout page, exclude quantity-change functionality\n        return (\n           <div className=\"checkout-item\">\n            <h2><span className=\"teal-highlight\">{this.props.item.name}</span></h2>\n            {this.renderPrice(this.props.item)}\n           </div>\n        );\n      } else {\n       return (\n          <div className=\"cart-item\">\n            <h2>\n            <button className=\"remove-button\" onClick={this.removeFromCart}>\n              <svg height=\"30\" viewBox=\"0 0 21 21\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\" stroke=\"#C64A38\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(2 2)\"><circle cx=\"8.5\" cy=\"8.5\" r=\"8\"/><g transform=\"matrix(0 1 -1 0 17 0)\"><path d=\"m5.5 11.5 6-6\"/><path d=\"m5.5 5.5 6 6\"/></g></g></svg>\n            </button>\n            {this.props.item.name}\n            </h2>\n            <div className=\"quantity-button-bar\">\n              <button onClick={this.removeOne}>&ndash;</button>\n              {this.renderPrice(this.props.item)}\n              <button onClick={this.addToCart}>+</button>\n            </div>\n          </div>\n        );\n      }\n    }\n\n}\n\nexport default CartItem;\n","/Users/sarahbawabe/Documents/verb-website/verb-app/src/App.test.js",[],["74","75"],"/Users/sarahbawabe/Documents/verb-website/verb-app/src/setupTests.js",[],["76","77"],"/Users/sarahbawabe/Documents/verb-website/verb-app/src/ProductPage.js",["78","79"],"import React, { Component } from \"react\";\nimport './style.css';\nimport Product from \"./Product.js\";\nimport ShoppingCart from \"./ShoppingCart.js\";\n\n\n/** This component models the single-product page, and figures\n * out which product to show based on the unique sku that is stored\n * in the URL params when an item is clicked on.\n */\nclass ProductPage extends Component {\n    constructor(props) {\n      super(props);\n    }\n\n    /**\n     * Figures out which item should be shown by parsing the list and\n     * cross-checking skus.\n     * @param sku : sku number to be searched\n     * @return item with associated sku */\n    getItem(sku) {\n      console.log(sku);\n      for (var i=0; i<this.props.list.length; i++) {\n        if (this.props.list[i].sku == sku) {\n          return this.props.list[i]\n        }\n      }\n    }\n\n    /* addToCart, removeAll, and removeOne are functions that simply allow\n     * for passing of the callback to the Products and ShoppingCart, so that\n     * they are able to have cart-adjusting functionality. */\n    addToCart = (item) => {\n      this.props.addToCartCB(item);\n    }\n\n    removeAll = (item) => {\n      this.props.removeAllCB(item);\n    }\n\n    removeOne = (item) => {\n      this.props.removeOneCB(item);\n    }\n\n    render() {\n      let productId = this.props.match.params.productid;\n      console.log(\"productId\", productId);\n      return (\n        <div className=\"app-container\">\n          <Product item={this.getItem(this.props.match.params.productid)}\n            addToCartCB={this.addToCart.bind(this)}\n            sale={this.props.constants.SALE_PERCENT}\n            showFull=\"True\"/>\n          <ShoppingCart\n            onCheckout=\"False\"\n            cart={this.props.cart}\n            constants={this.props.constants}\n            quantities={this.props.quantities}\n            removeAllCB={this.removeAll.bind(this)}\n            addToCartCB={this.addToCart.bind(this)}\n            removeOneCB={this.removeOne.bind(this)}/>\n        </div>\n      )\n    }\n}\n\nexport default ProductPage;\n","/Users/sarahbawabe/Documents/verb-website/verb-app/src/Main.js",["80"],"import React, { Component } from \"react\";\nimport ProductPage from \"./ProductPage.js\";\nimport CheckoutPage from \"./CheckoutPage.js\";\nimport HomePage from \"./HomePage.js\";\nimport './style.css';\nimport { Switch, Route } from \"react-router-dom\";\n\n/** Top-level component for the app. Stores the cart and quantities and\n * passes these states to its children components, so that everything is\n * in sync. */\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: [],\n      quantities: []\n    }\n  }\n\n  /**\n  * Increases item quantity by one.\n  * @param item : item whose quantity is to be updated\n  */\n  addToCart(item) {\n    if (this.state.cart.includes(item)) { // if in cart, update quantity\n      var index = this.state.cart.indexOf(item)\n      var holder = this.state.quantities\n      holder[index] += 1\n      this.setState({quantities: holder})\n    } else { // if not in cart, add to cart and store quantity as 1\n      this.setState({\n        cart: this.state.cart.concat([item]),\n        quantities: this.state.quantities.concat([1.0])\n      })\n    }\n  }\n\n  /**\n  * Removes the item completely from the cart.\n  * @param item : item to be removed from cart\n  */\n  removeItem(item) {\n    if (this.state.cart.includes(item)) {\n      if (this.state.cart.length == 1) { // if last in cart, clear\n        this.setState({cart: [], quantities: []})\n      } else {\n        var index = this.state.cart.indexOf(item)\n        var cart = this.state.cart\n        cart.splice(index,1)\n        var quantities = this.state.quantities\n        quantities.splice(index,1)\n        this.setState({cart: cart, quantities: quantities})\n      }\n    }\n  }\n\n  /**\n  * Reduces item quantity by one.\n  * @param item : item whose quantity is to be updated\n  */\n  removeOne(item) {\n    if (this.state.cart.includes(item)) {\n      var index = this.state.cart.indexOf(item)\n      var holder = this.state.quantities\n      holder[index] -= 1\n      this.setState({quantities: holder});\n    }\n  }\n\n  /** Renders the page, determining what should be shown based on URL route. */\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/product/:productid\" render={(props) => (\n          <ProductPage {...props}\n            list={this.props.list}\n            cart={this.state.cart}\n            quantities={this.state.quantities}\n            addToCartCB={this.addToCart.bind(this)}\n            removeAllCB={this.removeItem.bind(this)}\n            removeOneCB={this.removeOne.bind(this)}\n            constants={this.props.constants}/>)}/>\n\n        <Route path=\"/checkout\" render={(props) => (\n          <CheckoutPage {...props}\n            list={this.props.list}\n            cart={this.state.cart}\n            quantities={this.state.quantities}\n            constants={this.props.constants}/>)}/>\n\n        <Route path=\"/\" render={(props) => (\n          <HomePage {...props}\n            list={this.props.list}\n            cart={this.state.cart}\n            quantities={this.state.quantities}\n            addToCartCB={this.addToCart.bind(this)}\n            removeAllCB={this.removeItem.bind(this)}\n            removeOneCB={this.removeOne.bind(this)}\n            constants={this.props.constants}/>)}/>\n      </Switch>\n    );\n  }\n}\n\nexport default Main;\n","/Users/sarahbawabe/Documents/verb-website/verb-app/src/CheckoutPage.js",["81"],"import React, { Component } from \"react\";\nimport ShoppingCart from \"./ShoppingCart.js\";\nimport './style.css';\n\n/** This component models the checkout/order confirmation page, and\n * tells the ShoppingCart that it is onCheckout, so that the cart renders\n * accordingly. */\nclass CheckoutPage extends Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      return (\n        <div className=\"checkout-page\">\n          <h1>order confirmation!🎉</h1>\n          <ShoppingCart\n            onCheckout=\"True\"\n            cart={this.props.cart}\n            constants={this.props.constants}\n            quantities={this.props.quantities}/>\n        </div>\n      )\n    }\n}\n\nexport default CheckoutPage;\n","/Users/sarahbawabe/Documents/verb-website/verb-app/src/HomePage.js",["82"],"import React, { Component } from \"react\";\nimport Product from \"./Product.js\";\nimport './style.css';\nimport ShoppingCart from \"./ShoppingCart.js\";\n\n\n/** This component models the home/landing page. */\nclass HomePage extends Component {\n    constructor(props) {\n      super(props);\n    }\n\n    /* addToCart, removeAll, and removeOne are functions that simply allow\n     * for passing of the callback to the Products and ShoppingCart, so that\n     * they are able to have cart-adjusting functionality. */\n    addToCart = (item) => {\n      this.props.addToCartCB(item);\n    }\n\n    removeAll = (item) => {\n      this.props.removeAllCB(item);\n    }\n\n    removeOne = (item) => {\n      this.props.removeOneCB(item);\n    }\n\n    render() {\n      // render item list first and store as items variable\n      const items = this.props.list.map(item => {\n        return (<Product key={item.name}\n                  item={item}\n                  addToCartCB={this.addToCart.bind(this)}\n                  sale={this.props.constants.SALE_PERCENT}\n                  showFull=\"False\"/>)\n      });\n\n      return (\n        <div className=\"app-container\">\n          <div id=\"product-list\">\n            {items}\n          </div>\n          <ShoppingCart\n            onCheckout=\"False\"\n            cart={this.props.cart}\n            constants={this.props.constants}\n            quantities={this.props.quantities}\n            removeAllCB={this.removeAll.bind(this)}\n            addToCartCB={this.addToCart.bind(this)}\n            removeOneCB={this.removeOne.bind(this)}/>\n        </div>\n      );\n    }\n}\n\nexport default HomePage;\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":12,"column":5,"nodeType":"89","messageId":"90","endLine":14,"endColumn":6},{"ruleId":"91","severity":1,"message":"92","line":26,"column":18,"nodeType":"93","messageId":"94","endLine":26,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":52,"column":31,"nodeType":"93","messageId":"94","endLine":52,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":55,"column":15,"nodeType":"97","endLine":55,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":69,"column":17,"nodeType":"97","endLine":69,"endColumn":63},{"ruleId":"87","severity":1,"message":"88","line":14,"column":3,"nodeType":"89","messageId":"90","endLine":16,"endColumn":4},{"ruleId":"91","severity":1,"message":"92","line":50,"column":18,"nodeType":"93","messageId":"94","endLine":50,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":65,"column":23,"nodeType":"93","messageId":"94","endLine":65,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":76,"column":32,"nodeType":"93","messageId":"94","endLine":76,"endColumn":34},{"ruleId":"91","severity":1,"message":"92","line":100,"column":31,"nodeType":"93","messageId":"94","endLine":100,"endColumn":33},{"ruleId":"91","severity":1,"message":"92","line":21,"column":31,"nodeType":"93","messageId":"94","endLine":21,"endColumn":33},{"ruleId":"91","severity":1,"message":"92","line":58,"column":23,"nodeType":"93","messageId":"94","endLine":58,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":74,"column":33,"nodeType":"93","messageId":"94","endLine":74,"endColumn":35},{"ruleId":"83","replacedBy":"98"},{"ruleId":"85","replacedBy":"99"},{"ruleId":"83","replacedBy":"98"},{"ruleId":"85","replacedBy":"99"},{"ruleId":"87","severity":1,"message":"88","line":12,"column":5,"nodeType":"89","messageId":"90","endLine":14,"endColumn":6},{"ruleId":"91","severity":1,"message":"92","line":24,"column":36,"nodeType":"93","messageId":"94","endLine":24,"endColumn":38},{"ruleId":"91","severity":1,"message":"92","line":45,"column":34,"nodeType":"93","messageId":"94","endLine":45,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":9,"column":5,"nodeType":"89","messageId":"90","endLine":11,"endColumn":6},{"ruleId":"87","severity":1,"message":"88","line":9,"column":5,"nodeType":"89","messageId":"90","endLine":11,"endColumn":6},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["100"],["101"],"no-global-assign","no-unsafe-negation"]
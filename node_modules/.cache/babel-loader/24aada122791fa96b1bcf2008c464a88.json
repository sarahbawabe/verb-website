{"ast":null,"code":"var _jsxFileName = \"/Users/sarahbawabe/Documents/verb-website/verb-app/src/CartItem.js\";\nimport React, { Component } from 'react';\nimport './style.css';\n/** Models an item in the ShoppingCart. Stores its quantity in state so\n * that it can re-render on quantity updates.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.removeOne = event => {\n      if (this.props.quantity == 1) {\n        // if only one left, remove from cart instead\n        this.removeFromCart();\n      } else {\n        this.props.removeOneCB(this.props.item);\n      }\n    };\n\n    this.removeFromCart = event => {\n      this.props.removeAllCB(this.props.item);\n    };\n\n    this.addToCart = event => {\n      this.setState({\n        quantity: this.state.quantity + 1\n      });\n      this.props.addToCartCB(this.props.item);\n    };\n\n    this.state = {\n      quantity: 1\n    };\n  }\n  /** Handles the (-) button functionality, and determines if an item should\n   * be removed completely from cart based on its current quantity. */\n\n\n  /**\n   * Calculates the cost of an item based on its price and quantity.\n  * @param quantity : quantity of given item currently in cart\n  * @param price : price of purchasing one item\n  * @return total cost of CartItem\n  */\n  getCost(quantity, price) {\n    var cost = quantity * price;\n    return cost.toFixed(2);\n  }\n  /**\n   * Renders the price of the item based on whether or not it's on sale.\n   * @param item : item whose price is to be rendered\n   * @return price of item\n   */\n\n\n  renderPrice(item) {\n    if (item.onSale == \"True\") {\n      // if on sale, render (% off) and calculate new price\n      var salePrice = (this.props.item.price * (1 - this.props.sale / 100)).toFixed(2);\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [this.props.quantity, \" x $\", salePrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sale-item\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"(\", this.props.sale, \"% off!)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    } else {\n      // if not on sale, render full price\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [this.props.quantity, \" x $\", this.props.item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n  render() {\n    if (this.props.onCheckout == \"True\") {\n      // if on checkout page, exclude quantity-change functionality\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkout-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"teal-highlight\",\n            children: this.props.item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), this.renderPrice(this.props.item)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            onClick: this.removeFromCart,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              height: \"30\",\n              viewBox: \"0 0 21 21\",\n              width: \"30\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"g\", {\n                fill: \"none\",\n                fillRule: \"evenodd\",\n                stroke: \"#C64A38\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                transform: \"translate(2 2)\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"8.5\",\n                  cy: \"8.5\",\n                  r: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 221\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  transform: \"matrix(0 1 -1 0 17 0)\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"m5.5 11.5 6-6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 291\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"m5.5 5.5 6 6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 316\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 254\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 98\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), this.props.item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-button-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.removeOne,\n            children: \"\\u2013\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), this.renderPrice(this.props.item), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addToCart,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default CartItem;","map":{"version":3,"sources":["/Users/sarahbawabe/Documents/verb-website/verb-app/src/CartItem.js"],"names":["React","Component","CartItem","constructor","props","removeOne","event","quantity","removeFromCart","removeOneCB","item","removeAllCB","addToCart","setState","state","addToCartCB","getCost","price","cost","toFixed","renderPrice","onSale","salePrice","sale","render","onCheckout","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './style.css';\n\n\n/** Models an item in the ShoppingCart. Stores its quantity in state so\n * that it can re-render on quantity updates.\n */\nclass CartItem extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          quantity: 1\n      };\n    }\n\n    /** Handles the (-) button functionality, and determines if an item should\n     * be removed completely from cart based on its current quantity. */\n    removeOne = (event) => {\n      if (this.props.quantity == 1) { // if only one left, remove from cart instead\n        this.removeFromCart()\n      } else {\n        this.props.removeOneCB(this.props.item)\n      }\n    }\n\n    /** Handles the (X) button functionality by calling the removeAll\n     * callback function. */\n    removeFromCart = (event) => {\n      this.props.removeAllCB(this.props.item)\n    }\n\n    /** Handles the add to cart functionality by calling the addToCart\n     * callback function and updating the CartItem's state accordingly. */\n    addToCart = (event) => {\n      this.setState({ quantity: this.state.quantity + 1})\n      this.props.addToCartCB(this.props.item)\n    }\n\n    /**\n     * Calculates the cost of an item based on its price and quantity.\n    * @param quantity : quantity of given item currently in cart\n    * @param price : price of purchasing one item\n    * @return total cost of CartItem\n    */\n    getCost(quantity, price) {\n      var cost = quantity * price\n      return cost.toFixed(2)\n    }\n\n    /**\n     * Renders the price of the item based on whether or not it's on sale.\n     * @param item : item whose price is to be rendered\n     * @return price of item\n     */\n    renderPrice(item) {\n      if (item.onSale == \"True\") { // if on sale, render (% off) and calculate new price\n        var salePrice = (this.props.item.price * (1 - this.props.sale/100)).toFixed(2)\n        return (\n          <span>\n            <h3>{this.props.quantity} x ${salePrice}</h3>\n            <span className=\"sale-item\"><h4>({this.props.sale}% off!)</h4></span>\n          </span>\n        )\n      } else { // if not on sale, render full price\n        return (\n          <h3>{this.props.quantity} x ${this.props.item.price}</h3>\n        )\n      }\n    }\n\n    render() {\n      if (this.props.onCheckout == \"True\") { // if on checkout page, exclude quantity-change functionality\n        return (\n           <div className=\"checkout-item\">\n            <h2><span className=\"teal-highlight\">{this.props.item.name}</span></h2>\n            {this.renderPrice(this.props.item)}\n           </div>\n        );\n      } else {\n       return (\n          <div className=\"cart-item\">\n            <h2>\n            <button className=\"remove-button\" onClick={this.removeFromCart}>\n              <svg height=\"30\" viewBox=\"0 0 21 21\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\" stroke=\"#C64A38\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(2 2)\"><circle cx=\"8.5\" cy=\"8.5\" r=\"8\"/><g transform=\"matrix(0 1 -1 0 17 0)\"><path d=\"m5.5 11.5 6-6\"/><path d=\"m5.5 5.5 6 6\"/></g></g></svg>\n            </button>\n            {this.props.item.name}\n            </h2>\n            <div className=\"quantity-button-bar\">\n              <button onClick={this.removeOne}>&ndash;</button>\n              {this.renderPrice(this.props.item)}\n              <button onClick={this.addToCart}>+</button>\n            </div>\n          </div>\n        );\n      }\n    }\n\n}\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}
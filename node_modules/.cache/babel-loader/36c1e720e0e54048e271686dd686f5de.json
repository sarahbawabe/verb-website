{"ast":null,"code":"var _jsxFileName = \"/Users/sarahbawabe/Documents/verb-website/verb-app/src/Main.js\";\nimport React, { Component } from \"react\";\nimport ProductPage from \"./ProductPage.js\";\nimport CheckoutPage from \"./CheckoutPage.js\";\nimport HomePage from \"./HomePage.js\";\nimport ShoppingCart from \"./ShoppingCart.js\";\nimport './style.css';\nimport { Switch, Route, Link } from \"react-router-dom\";\n/* constants used throughout program for sales, shipping, and tax, so that\n * these quantities can be easily updated, as necessary. */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constants = {\n  SHIPPING_COST: 3,\n  TAX_PERCENT: 6.25,\n  SALE_PERCENT: 15\n};\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: [],\n      quantities: []\n    };\n  }\n  /**\n  * Increases item quantity by one.\n  * @param item : item whose quantity is to be updated\n  */\n\n\n  addToCart(item) {\n    if (this.state.cart.includes(item)) {\n      // if in cart, update quantity\n      var index = this.state.cart.indexOf(item);\n      var holder = this.state.quantities;\n      holder[index] += 1;\n      this.setState({\n        quantities: holder\n      });\n    } else {\n      // if not in cart, add to cart and store quantity as 1\n      this.setState({\n        cart: this.state.cart.concat([item]),\n        quantities: this.state.quantities.concat([1.0])\n      });\n    }\n  }\n  /**\n  * Removes the item completely from the cart.\n  * @param item : item to be removed from cart\n  */\n\n\n  removeItem(item) {\n    if (this.state.cart.includes(item)) {\n      if (this.state.cart.length == 1) {\n        // if last in cart, clear\n        this.setState({\n          cart: [],\n          quantities: []\n        });\n      } else {\n        var index = this.state.cart.indexOf(item);\n        var cart = this.state.cart;\n        cart.splice(index, 1);\n        var quantities = this.state.quantities;\n        quantities.splice(index, 1);\n        this.setState({\n          cart: cart,\n          quantities: quantities\n        });\n      }\n    }\n  }\n  /**\n  * Reduces item quantity by one.\n  * @param item : item whose quantity is to be updated\n  */\n\n\n  removeOne(item) {\n    if (this.state.cart.includes(item)) {\n      var index = this.state.cart.indexOf(item);\n      var holder = this.state.quantities;\n      holder[index] -= 1;\n      this.setState({\n        quantities: holder\n      });\n    }\n  }\n  /** Renders the page, determining what should be shown based on url route. */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/product/:productid\",\n          render: props => /*#__PURE__*/_jsxDEV(ProductPage, { ...props,\n            cart: this.state.cart,\n            quantities: this.state.quantities,\n            constants: constants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/checkout\",\n          children: /*#__PURE__*/_jsxDEV(CheckoutPage, {\n            list: this.props.list,\n            cart: this.state.cart,\n            quantities: this.state.quantities,\n            constants: constants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(HomePage, {\n            list: this.props.list,\n            cart: this.state.cart,\n            quantities: this.state.quantities,\n            constants: constants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShoppingCart, {\n        cart: this.state.cart,\n        constants: this.props.constants,\n        quantities: this.props.quantities,\n        removeAllCB: this.removeAll.bind(this),\n        addToCartCB: this.addToCart.bind(this),\n        removeOneCB: this.removeOne.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main; // var subtotal = this.getSubtotal()\n// var tax = this.getTax(subtotal)\n// var total = this.getTotal(subtotal, tax)\n// based on the url route, determine which page to show\n// {this.renderProduct(this.props.location.state.item)}\n// console.log(this.props)\n// {this.renderProduct(this.props.location.state.item)}\n// {this.renderProduct(this.props.location.state.item)}\n// <h1>checkout page</h1>\n// <div id=\"shopping-cart\">\n//   {this.renderCart(subtotal, tax, total)}\n// </div>\n//\n// <div className=\"app-container\">\n//   <div id=\"product-list\">\n//     {this.renderList()}\n//   </div>\n//   <div id=\"shopping-cart\">\n//     <span className=\"align-text-svg\"><h1>shopping bag</h1><svg height=\"35\" viewBox=\"0 0 21 21\" width=\"35\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2.42575356.50254623 8.09559774-.00228582c.5209891-.0001471.9548019.39973171.9969972.91900928l.8938128 10.99973961c.0447299.5504704-.3652538 1.0329756-.9157242 1.0777056-.0269414.0021892-.0539605.0032851-.0809907.0032851h-9.83555122c-.55228475 0-1-.4477152-1-1 0-.0255993.00098299-.0511891.00294679-.076713l.84614072-10.99745378c.0400765-.52088193.4743495-.92313949.99677087-.92328699zm7.07424644 3.64272599v1c0 1.10456949-1.8954305 1.35472778-3 1.35472778s-3-.3954305-3-1.5v-1\" fill=\"none\" stroke=\"#2a2e3b\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(4 4)\"/></svg>\n//     </span>\n//     {this.renderCart(subtotal, tax, total)}\n//     <Link to=\"/checkout\" className=\"button unstyled-link\">checkout</Link>\n//   </div>\n// </div>\n// <button onClick={this.goToCheckout()}>checkout</button>","map":{"version":3,"sources":["/Users/sarahbawabe/Documents/verb-website/verb-app/src/Main.js"],"names":["React","Component","ProductPage","CheckoutPage","HomePage","ShoppingCart","Switch","Route","Link","constants","SHIPPING_COST","TAX_PERCENT","SALE_PERCENT","Main","constructor","props","state","cart","quantities","addToCart","item","includes","index","indexOf","holder","setState","concat","removeItem","length","splice","removeOne","render","list","removeAll","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProductPage from \"./ProductPage.js\";\nimport CheckoutPage from \"./CheckoutPage.js\";\nimport HomePage from \"./HomePage.js\";\nimport ShoppingCart from \"./ShoppingCart.js\";\nimport './style.css';\nimport {\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n/* constants used throughout program for sales, shipping, and tax, so that\n * these quantities can be easily updated, as necessary. */\nconst constants = {\n  SHIPPING_COST: 3,\n  TAX_PERCENT : 6.25,\n  SALE_PERCENT : 15\n}\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: [],\n      quantities: []\n    }\n  }\n\n  /**\n  * Increases item quantity by one.\n  * @param item : item whose quantity is to be updated\n  */\n  addToCart(item) {\n    if (this.state.cart.includes(item)) { // if in cart, update quantity\n      var index = this.state.cart.indexOf(item)\n      var holder = this.state.quantities\n      holder[index] += 1\n      this.setState({quantities: holder})\n    } else { // if not in cart, add to cart and store quantity as 1\n      this.setState({\n        cart: this.state.cart.concat([item]),\n        quantities: this.state.quantities.concat([1.0])\n      })\n    }\n  }\n\n  /**\n  * Removes the item completely from the cart.\n  * @param item : item to be removed from cart\n  */\n  removeItem(item) {\n    if (this.state.cart.includes(item)) {\n      if (this.state.cart.length == 1) { // if last in cart, clear\n        this.setState({cart: [], quantities: []})\n      } else {\n        var index = this.state.cart.indexOf(item)\n        var cart = this.state.cart\n        cart.splice(index,1)\n        var quantities = this.state.quantities\n        quantities.splice(index,1)\n        this.setState({cart: cart, quantities: quantities})\n      }\n    }\n  }\n\n  /**\n  * Reduces item quantity by one.\n  * @param item : item whose quantity is to be updated\n  */\n  removeOne(item) {\n    if (this.state.cart.includes(item)) {\n      var index = this.state.cart.indexOf(item)\n      var holder = this.state.quantities\n      holder[index] -= 1\n      this.setState({quantities: holder});\n    }\n  }\n\n  /** Renders the page, determining what should be shown based on url route. */\n  render() {\n\n    return (\n      <div class=\"app-container\">\n        <Switch>\n          <Route path=\"/product/:productid\" render={(props) => (\n            <ProductPage {...props}\n              cart={this.state.cart}\n              quantities={this.state.quantities}\n              constants={constants}/>)}/>\n\n          <Route path=\"/checkout\">\n            <CheckoutPage list={this.props.list}\n              cart={this.state.cart}\n              quantities={this.state.quantities}\n              constants={constants}/>\n          </Route>\n\n          <Route path=\"/\">\n            <HomePage list={this.props.list}\n              cart={this.state.cart}\n              quantities={this.state.quantities}\n              constants={constants}/>\n          </Route>\n        </Switch>\n\n        <ShoppingCart\n          cart={this.state.cart}\n          constants={this.props.constants}\n          quantities={this.props.quantities}\n          removeAllCB={this.removeAll.bind(this)}\n          addToCartCB={this.addToCart.bind(this)}\n          removeOneCB={this.removeOne.bind(this)}/>\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default Main;\n\n// var subtotal = this.getSubtotal()\n// var tax = this.getTax(subtotal)\n// var total = this.getTotal(subtotal, tax)\n\n// based on the url route, determine which page to show\n\n// {this.renderProduct(this.props.location.state.item)}\n// console.log(this.props)\n\n// {this.renderProduct(this.props.location.state.item)}\n// {this.renderProduct(this.props.location.state.item)}\n\n// <h1>checkout page</h1>\n// <div id=\"shopping-cart\">\n//   {this.renderCart(subtotal, tax, total)}\n// </div>\n\n//\n// <div className=\"app-container\">\n//   <div id=\"product-list\">\n//     {this.renderList()}\n//   </div>\n//   <div id=\"shopping-cart\">\n//     <span className=\"align-text-svg\"><h1>shopping bag</h1><svg height=\"35\" viewBox=\"0 0 21 21\" width=\"35\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2.42575356.50254623 8.09559774-.00228582c.5209891-.0001471.9548019.39973171.9969972.91900928l.8938128 10.99973961c.0447299.5504704-.3652538 1.0329756-.9157242 1.0777056-.0269414.0021892-.0539605.0032851-.0809907.0032851h-9.83555122c-.55228475 0-1-.4477152-1-1 0-.0255993.00098299-.0511891.00294679-.076713l.84614072-10.99745378c.0400765-.52088193.4743495-.92313949.99677087-.92328699zm7.07424644 3.64272599v1c0 1.10456949-1.8954305 1.35472778-3 1.35472778s-3-.3954305-3-1.5v-1\" fill=\"none\" stroke=\"#2a2e3b\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(4 4)\"/></svg>\n//     </span>\n//     {this.renderCart(subtotal, tax, total)}\n//     <Link to=\"/checkout\" className=\"button unstyled-link\">checkout</Link>\n//   </div>\n// </div>\n// <button onClick={this.goToCheckout()}>checkout</button>\n"]},"metadata":{},"sourceType":"module"}